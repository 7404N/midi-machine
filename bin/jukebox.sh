#!/bin/bash
# Plays song generated by a model continuously until stopped.
#
# (c) 2014 Brandon L. Reiss
####

prog=`basename $0`

usage () {
    echo """
Usage: $prog INPUT_DIR TIME_SIG MODEL_PATH INPUT_WND OUTPUT_WND LENGTH
Compose a new song from a model.
  <INPUT_DIR> directory where input *.mid files reside
  <TIME_SIG> time signature, channels, and gcd e.g. 4/2-8-24-4-256
  <MODEL_PATH> path to trained model
  <INPUT_WND> size in gcd ticks of input point X
  <OUTPUT_WND> size in gcd ticks of target point Y
  <LENGTH> length of generated songs
"""
}

script_dir=`dirname $0`
compose_script="${script_dir}/compose.lua"

# Look for compose script.
if [ ! -f "${compose_script}" ]; then
    echo 'Cannot find compose.lua in script directory' 1>&2
    exit 1
fi

# See if we have timidity player.
if ! which timidity >/dev/null 2>&1 ; then
    echo 'MIDI player timidity not found; install dependencies' 1>&2
    exit 1
fi

# Get args.
if [ ! $# == 6 ]; then
    echo 'Invalid arguments' 1>&2
    usage
    exit 1
fi
input_dir=$1; shift
time_sig=$1; shift
model_path=$1; shift
input_wnd=$1; shift
output_wnd=$1; shift
length=$1; shift

# Choose temp location.
date_str=`date +%Y%m%d_%H%M%S`
output_dir="/tmp/jukebox-${date_str}"
echo Using output dir: ${output_dir}
mkdir ${output_dir} >/dev/null 2>&1
if [ ! -d "${output_dir}" ]; then
    echo "Failed creating output directory ${output_dir}" 1>&2
    exit 1
fi

# Create sequence of songs.
song_idx=1
while true; do

    filename="${song_idx}.mid"
    echo "Composing and playing ${filename}"

    th "${compose_script}" -i ${input_wnd} -o ${output_wnd} -n "${filename}" \
        "${input_dir}" ${time_sig} "${model_path}" ${length} "${output_dir}" \
        >/dev/null 2>&1

    timidity "${output_dir}/${filename}"

    # Increment song index.
    ((++song_idx))

done
